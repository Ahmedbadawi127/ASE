@page "/createcustomers"
@inject Microsoft.AspNetCore.Components.NavigationManager Navigation

<EditForm Model="@FModel" OnValidSubmit="SubmitClick">
    <FluentValidator></FluentValidator>
    <ValidationSummary />

    <div class="row">
        <div class="form-group col-md-6">
            <label for="NameAr">الاسم بالعربي</label>
            <InputText id="NameAr" class="form-control" @bind-Value="FModel.NameAr"></InputText>
            <ValidationMessage For="() => FModel.NameAr"></ValidationMessage>
        </div>
        <div class="form-group col-md-6">
            <label for="NameEn">الاسم بالانجليزي</label>
            <InputText id="NameEn" class="form-control" @bind-Value="FModel.NameEn"></InputText>
            <ValidationMessage For="() => FModel.NameEn"></ValidationMessage>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <SfTextBox Multiline=true FloatLabelType="@FloatLabelType.Auto" Placeholder="ادخل العنوان" @bind-Value="FModel.Address"></SfTextBox>
            <ValidationMessage For="() => FModel.Address"></ValidationMessage>
        </div>
        <div class="form-group col-md-6">
            <label for="Phone">التليفون</label>
            <InputText id="Phone" class="form-control" @bind-Value="FModel.Phone"></InputText>
            <ValidationMessage For="() => FModel.Phone"></ValidationMessage>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <label asp-for="Ingredients" class="control-label">المحافظه</label>
            <SfDropDownList TValue="int?" @bind-Value="@FModel.StateIdFM" TItem="LookupDto" Placeholder="اختر المحافظه">
                <SfDataManager Url="api/Lookups/GetLookups/AllStates" Adaptor="Syncfusion.Blazor.Adaptors.WebApiAdaptor" CrossDomain=true></SfDataManager>
                <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
            </SfDropDownList>
            <ValidationMessage For="() => FModel.StateId"></ValidationMessage>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="Ingredients" class="control-label">المدينه</label>
            <SfDropDownList TValue="int?" @bind-Value="@FModel.CityIdFM" TItem="LookupDto" Placeholder="اختر المدينه">
                <SfDataManager Url="api/Lookups/GetLookups/AllCities" Adaptor="Syncfusion.Blazor.Adaptors.WebApiAdaptor" CrossDomain=true></SfDataManager>
                <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
            </SfDropDownList>
            <ValidationMessage For="() => FModel.CityId"></ValidationMessage>
        </div>
    </div>


    <div class="form-group">
        <button type="submit" disabled=@Disabled class="btn btn-primary">حفظ</button>
        <button class="btn btn-link" @onclick="Cancel_Click">إلغاء</button>
    </div>
</EditForm>

@code{
    [Inject]
    protected HttpClient Http { get; set; }
    [Parameter]
    public EventCallback OnCancel { get; set; }
    [Parameter]
    public EventCallback<string> OnSuccess { get; set; }
    CreateCustomersFM FModel { get; set; }
    bool Disabled { get; set; }





    protected override async Task OnInitializedAsync()
    {
        Disabled = false;
        //var User = await umAlQuraOperations.GetLoggedInUser(Http);
        FModel = new CreateCustomersFM
        {
        };
    }




    public async Task Cancel_Click()
    {
        await OnCancel.InvokeAsync(null);
    }

    protected async Task SubmitClick()
    {
        try
        {
            Disabled = true;
            @*var response = await Http.PostAsJsonAsync<BudgetFlowCreateBudgetRequestCommand>("api/BFlowCreateActions/BudgetFlowCreateBudgetRequest", FModel);
            if (!response.IsSuccessStatusCode)
            {
                Disabled = false;
                string error = await response.Content.ReadAsStringAsync();
                throw new Exception(error);
            }
            string fid = await response.Content.ReadAsStringAsync();
            if (OnSuccess.HasDelegate)
            {
                await OnSuccess.InvokeAsync(fid);
            }
            else
            {
                Disabled = false;
                Navigation.NavigateTo($"/BudgetFlow/My/{fid}");
            }*@
        }
        catch (Exception ex)
        {
            //await umAlQuraOperations.ShowToast("رساله خطأ من النظام", ex.Message, "error");
        }
    }
}










